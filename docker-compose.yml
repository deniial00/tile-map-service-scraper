version: '3.9'

services:

  # tileserver:
  #   image: maptiler/tileserver-gl
  #   ports:
  #     - "8080:8080"
  #   volumes:
  #     - ./tileserver-gl:/data

  postgres:
    build:
      context: ./database
      dockerfile: Dockerfile
    platform: linux/arm64/v8
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_INITDB_ARGS=--auth-host=scram-sha-256
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - ZOOM_LEVEL=${ZOOM_LEVEL}
    volumes:
      - ./backend/src:/app/src
      - ./backend/api.js:/app/api.js
      - ./backend/data/austria.geojson:/data/austria.geojson
      - ./logs/:/logs/
    ports:
      - "3000:3000"
    command: ["npm", "run", "${OPMODE}"]
    depends_on:
      postgres:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/App.tsx:/app/App.tsx
      - ./frontend/index.html:/app/index.html
    ports:
      - "5173:5173"
    command: ["yarn", "dev", "--host", "0.0.0.0"]
    # command: ["yarn", "build"]
    # No ports exposed, just builds

  # nginx:
  #   image: nginx:alpine
  #   depends_on:
  #     - frontend
  #   volumes:
  #     - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf
  #     - ./frontend/dist:/usr/share/nginx/html
  #   ports:
  #     - "80:80"

volumes:
  postgres_data:
    driver: local